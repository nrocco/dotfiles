# Set some options
setopt EXTENDED_GLOB        # Patterns, to match the name of files and other things
setopt NOMATCH
setopt NOTIFY               # When a background job finishes, print a message
setopt COMPLETE_ALIASES     # aliases on the command line are not internally substituted before completion is attempted
setopt PROMPT_SUBST         # parameter expansion, command substitution and arithmetic expansion is performed in prompts
setopt NO_CASE_GLOB
setopt NO_AUTO_CD           # Do not interpret a non existing command as a `cd` command
setopt NO_BEEP              # Beep
setopt NO_AUTO_MENU         # No menu completion after the second consecutive request for completion
setopt NO_MENU_COMPLETE     # On ambigious match, do not insert the first match immediately


#
# ###########################################################################
# Load the following zsh modules
autoload -U colors && colors

PROMPT='%(?..%{$fg[red]%}|%?|)%{$fg[green]%}%n@%m%{$reset_color%}:%{$fg[yellow]%}%~%{$reset_color%}${vcs_info_msg_0_} %(!.#.%%) '
# ###########################################################################
#


#
# ###########################################################################
# use emacs keybindings
bindkey -e

# remove some bindings
bindkey -r '^O'

# also do history expansion on space
bindkey " "         magic-space

bindkey "\eOc"      forward-word
bindkey "\e[1;3C"   forward-word
bindkey "\e[1;5C"   forward-word
bindkey "\e[5C"     forward-word
bindkey "\e\e[C"    forward-word         # urxvt: alt + right arrow

bindkey "\e[5D"     backward-word
bindkey "\eOd"      backward-word
bindkey "\e[1;3D"   backward-word
bindkey "\e[1;5D"   backward-word
bindkey "\e\e[D"    backward-word        # urxvt: alt + left arrow

bindkey "\e[1~"     beginning-of-line
bindkey "\e[7~"     beginning-of-line
bindkey "\e[H"      beginning-of-line

bindkey "\e[3;3~"   delete-word
bindkey "\e[3~"     delete-char

bindkey "\e[4~"     end-of-line
bindkey "\e[8~"     end-of-line
bindkey "\e[F"      end-of-line

bindkey "\e[5~"     history-beginning-search-backward
bindkey "\e[6~"     history-beginning-search-forward


# bindkey "\e[1;3A" alt-up
# bindkey "\e[1;3B" alt-down
# insert the last used word
# bindkey "\e." insert-last-word
# bindkey "^I"  expand-or-complete
# ###########################################################################
#


#
# ###########################################################################
# Disable lookup of command after making a typo
unset command_not_found_handle

# Set preferred default editor
export EDITOR=vim

# Set preferred default pager
export PAGER=less

# Set default options for the less pager
export LESS="--RAW-CONTROL-CHARS --LONG-PROMPT --quiet"

# Set default options for grep
export GREP_OPTIONS='--color=auto'

# Set pythonrc file path
export PYTHONSTARTUP=$HOME/.pythonrc.py

export WORDCHARS='*?_-[]~=&;!#$%^(){}<>'
# ###########################################################################
#


#
# ###########################################################################
autoload -U compinit && compinit -C
autoload -U bashcompinit && bashcompinit

setopt COMPLETE_IN_WORD     # Cursor stays where it is and completion is done from both ends
setopt ALWAYS_TO_END        # Place cursor at the end after successful match

zstyle ':completion:*'              menu select

## case-insensitive (all),partial-word and then substring completion
zstyle ':completion:*'              matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

zstyle ':completion::complete:*'    use-cache on
zstyle ':completion::complete:*'    cache-path .zcache
zstyle ':completion:*:cd:*'         ignore-parents parent pwd

zstyle ':completion:*:functions' ignored-patterns '_*'
zstyle ':completion:*:(rm|kill|diff):*' ignore-line yes

zstyle ':completion:*' group-name ''
zstyle ':completion:*' verbose true

# Nice menu when doing kill
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'


# Show red dots while completing
expand-or-complete-with-dots() {
    echo -n "\e[31m...\e[0m"
    zle expand-or-complete
    zle redisplay
}

zle -N expand-or-complete-with-dots
bindkey "^I" expand-or-complete-with-dots
# ###########################################################################
#

#
# ###########################################################################
HISTFILE=~/.histfile           # the name of the file where to save history
HISTSIZE=9999                  # the number of lines the shell will keep within one session
SAVEHIST=9999                  # the number of lines of your history you want saved

setopt APPEND_HISTORY          # append the new history to the old
setopt EXTENDED_HISTORY        # saves the time when the command was started and how long it ran for.
setopt HIST_EXPIRE_DUPS_FIRST  # preferentially removes duplicates when the history fills up
setopt HIST_IGNORE_ALL_DUPS    # removes copies of lines still in the history list
setopt HIST_IGNORE_DUPS        # tells the shell not to store a history line if it's the same as the previous one
setopt HIST_IGNORE_SPACE       # lines which begin with a space don't go into the history
setopt HIST_VERIFY
setopt INC_APPEND_HISTORY      # each line is added to the history in this way as it is executed
setopt SHARE_HISTORY           # as each line is added, the history file notify all other shells
# ###########################################################################
#


#
# ###########################################################################
autoload -Uz vcs_info

# Git in the prompt
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:git*:*' get-revision true
zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:*' stagedstr '+'
zstyle ':vcs_info:*' unstagedstr '*'
zstyle ':vcs_info:*' formats " [%b%c%u%m]"
zstyle ':vcs_info:*' actionformats " (%s|%a) [%b%c%u%m]"
zstyle ':vcs_info:git*+set-message:*' hooks git-aheadbehind git-stash

precmd() {
    vcs_info
}

# https://github.com/blaenk/dots/blob/master/zsh/zsh/vcsinfo.zsh
function +vi-git-aheadbehind() {
    local ahead behind
    local -a gitstatus

    behind=$(git rev-list HEAD..${hook_com[branch]}@{upstream} 2>/dev/null | wc -l | tr -d ' ')
    (( $behind )) && gitstatus+=( " -${behind}%f" )

    ahead=$(git rev-list ${hook_com[branch]}@{upstream}..HEAD 2>/dev/null | wc -l | tr -d ' ')
    (( $ahead )) && gitstatus+=( " +${ahead}%f" )

    hook_com[misc]+=${(j::)gitstatus}

    if [[ -n ${hook_com[misc]} ]]
    then
        hook_com[misc]=" âˆ·%f${hook_com[misc]}"
    fi
}

function +vi-git-stash() {
    if [[ -s ${hook_com[base]}/.git/refs/stash ]]
    then
        hook_com[misc]+="\$"
    fi
}
# ###########################################################################
#


#
# ###########################################################################
# http://blog.viridian-project.de/2008/07/03/zsh-tip-handling-urls-with-url-quote-magic/
autoload -U url-quote-magic
zle -N self-insert url-quote-magic
# ###########################################################################
#


#
# ###########################################################################
function z() {
  if [ -r ~/.zshrc ]
  then
    source ~/.zshrc
    echo "Sourced ~/.zshrc"
  else
    echo "Doing nothing"
    return 1
  fi
}

function running() {
  ps auwx | grep "$@" | grep -v grep
}

function gen_pass() {
  LC_ALL=C tr -dc '[:alnum:]._\-' < /dev/urandom | head -c${1:-20}; echo
}
alias xkpass="echo -e \"$(curl -s 'https://www.xkpasswd.net/c/index.cgi?fname=generatePassword&args=4&num_words=4&args=4&MIN_WORD_LENGTH=4&args=8&MAX_WORD_LENGTH=8&args=CAPITAL&case_transform=CAPITAL&args=e%3Ao&l33t_subs_list=e%3Ao&args=%3D&custom_separator=%3D&args=0&preppend_numbers=0&args=3&append_numbers=3&args=SEPARATOR&pad_char=SEPARATOR&args=1&pre_pad=1&args=1&post_pad=1&args=0&adaptive_padding=0&args=1412521461917&ie_sucks=1412521461917' | sed 's/+/ /g;s/%\(..\)/\\x\1/g;')\""

if [[ "Darwin" == "$(uname)" ]]
then
    alias ls='ls -G -F'
else
    alias ls='ls --color=auto -F'
fi

alias l='ls -l'
alias ll='ls -la'
alias lt='ls -lrt'

alias ..='cd ..'
alias ...='cd ../..'

alias vi='vim'
alias vihosts='sudo vim /etc/hosts'

alias mv='mv -vi'
alias cp='cp -vi'

alias drop_caches='sudo su -c "sync; echo 3 > /proc/sys/vm/drop_caches"'

alias jsonfmt='python -mjson.tool'

alias sshc='ssh -o "StrictHostKeychecking no" -o "UserKnownHostsFile /dev/null"'
alias scpc='scp -o "StrictHostKeychecking no" -o "UserKnownHostsFile /dev/null"'
# ###########################################################################
#


#
# ###########################################################################
source ~/.dotfiles/shell/functions/venv

[ -f $HOME/.zshrc-local ] && source $HOME/.zshrc-local
