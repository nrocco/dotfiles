export VENV_DIR=/var/venvs


function venv() {

  # Check if environment variable isset
  [ -z "${VENV_DIR}" ] && echo 'Environment variable not set e.g.: export VENV_DIR=/path/to/venvs' && return 1

  # Check if the executable virtualenv exists
  type virtualenv >/dev/null 2>&1 || { echo 'Is virtualenv installed?' && return 1; }

  # Create the virtualenv directory if it does not exist
  [ ! -d "$VENV_DIR" ] && mkdir -p "$VENV_DIR"

  if [[ $# -lt 1 || "--help" = "$1" ]]
  then
    echo "Available virtualenv's:" $(ls ${VENV_DIR})
    echo "Usage: venv [--create|--goto|--ctags|--destroy|--recreate] virtualenv"
    return 3
  fi

  if [[ $# -eq 1 ]]
  then
    local venv="${VENV_DIR}/${1}"
    [ ! -d "${venv}" ] && echo "virtualenv ${1} does no exist in ${venv}" && return 1
    echo "Activating virtualenv ${1} in ${venv}"
    . "${venv}/bin/activate" && return
  fi


  [ -z "${2}" ] && echo 'Specify a virtualenv name' && return 3
  local venv="${VENV_DIR}/${2}"


  if [[ "--create" = "$1" ]]
  then
    [ -d "${venv}" ] && echo "virtualenv ${2} already exists in ${venv}" && return 1
    echo "Creating virtualenv ${2} in ${venv}"
    virtualenv --distribute "${venv}" && venv "$2" && return


  elif [[ "--goto" = "$1" ]]
  then

    [ ! -d "${venv}" ] && echo "virtualenv ${2} does not exist in ${venv}" && return 1
    cd ${venv} && return


  elif [[ "--ctags" = "$1" ]]
  then
    [ ! -d "${venv}" ] && echo "virtualenv ${2} does not exist in ${venv}" && return 1
    echo "Generating ctags file for virtualenv ${2}"
    ctags -R -f ${venv}/tags --languages=python --exclude=${venv}/local/* ${venv} && return


  elif [[ "--destroy" = "$1" ]]
  then
    [ ! -d "${venv}" ] && echo "virtualenv ${2} does not exist in ${venv}" && return 1
    echo "Destroy virtualenv $venv"
    type deactivate 2> /dev/null | head -n1 | grep -q 'is a function' && deactivate
    rm -rf "$venv" && return


  elif [[ "--recreate" = "$1" ]]
  then
    [ ! -d "${venv}" ] && echo "virtualenv ${2} does not exist in ${venv}" && return 1
    echo "Recreating virtual environment $venv"
    venv --destroy "$2" && venv --create "$2" && return


  else
    echo 'Not good' && return 1

  fi
}

_venv_compl() 
{
    [ -z "$VENV_DIR" ] && return

    local cmd cur prev opts
    COMPREPLY=()
    cmd="${1##*/}"
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    opts="$(\ls $VENV_DIR)"

    [ "$cmd" = "$prev" ] && opts="${opts} --create --goto --ctags --destroy --recreate"
 
    COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )

    return 0
}
complete -F _venv_compl venv
